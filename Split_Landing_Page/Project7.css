/* 定义全局属性值，后续可以直接调用属性名称 */
:root{
    --left-bg-color: rgba(147, 145, 245, 0.7);
    --right-bg-color: rgba(139, 206, 247, 0.8);
    --left-btn-hover-color: rgba(76, 74, 216, 0.7);
    --right-btn-hover-color: rgba(42, 151, 219, 0.8);
    --hover-width: 75%;
    --other-width: 25%;
    --speed: 1s;
}


*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body{
    margin: 0;
    font-family: sans-serif;
    height: 100vh;
}

.container{
    width: 100vw;
    height: 100vh;
    background-color: antiquewhite;
    position: relative;
}

h1{
    font-family: sans-serif;
    font-size: 4rem; /* rem为浏览器根元素大小 */
    color: aliceblue;
    position: absolute; /* 永远在图片上，需要绝对定位， 同时子绝父相 */
    top: 20%;
    left: 50%;
    transform: translateX(-50%);
    white-space: nowrap;  /* 无论页面多小都不换行 */
} 

.box{
    position: absolute;
    width: 50%;
    height: 100%;
    overflow: hidden;
}

.box.left{
    left: 0;
    background-image: url(./Britain.jpg);
    background-repeat: no-repeat;
    background-size: cover;
}

.box.right{
    right: 0;
    background-image: url(./Greece.jpg);
    background-repeat: no-repeat;
    background-size: cover;
}

.box.left::before{  /* 通过伪元素设置图片蒙版 */
    /* ::befor ::after 是伪元素，将其成为匹配选中的元素的 第一个/最后一个 子元素 ，
    常通过 content 属性来为一个元素添加修饰性的内容。此元素默认是行级的。 */
    content: ''; /* 修饰性元素为空，因为本设置的目的是为左右图片添加颜色蒙版 */
    display: block;
    width: 100%;
    height: 100%;
    background-color: var(--left-bg-color);
}

.box.right::before{  /* 通过伪元素设置图片蒙版 */
    /* ::befor ::after 是伪元素，将其成为匹配选中的元素的 第一个/最后一个 子元素 ，
    常通过 content 属性来为一个元素添加修饰性的内容。此元素默认是行级的。 */
    content: ''; /* 修饰性元素为空，因为本设置的目的是为左右图片添加颜色蒙版 */
    display: block;
    width: 100%;
    height: 100%;
    background-color: var(--right-bg-color);
}

.btn{
    color: #fff;
    font-family: 'Times New Roman', Times, serif;
    font-size: 40px;
    text-decoration: none; /* 去掉下划线 */
    font-weight: bolder;
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    top: 40vh;
    border: #fff solid 0.2rem;  /* 设置按钮边框 */
    width: 15rem;
    padding: 1.5rem;
    text-align: center;
    text-transform: uppercase;   /* 将btn里的文字全部转为大写 */
}

.box.left .btn:hover{
    background-color: var(--left-btn-hover-color);
    border-color: var(--left-btn-hover-color);
}

.box.right .btn:hover{
    background-color: var(--right-btn-hover-color);
    border-color: var(--right-btn-hover-color);
}

.hover-left .left{  /* 对container添加 hover-left 类名，并对其left左边的元素进行变换操作 */
    width: var(--hover-width);
}

.hover-left .right{
    width: var(--other-width);
}

.hover-right .right{
    width: var(--hover-width);
}

.hover-right .left{
    width: var(--other-width);
}

.box, .right::before, .left::before{
    transition: width var(--speed) ease-in-out;
}

@media (max-width:800px) {  /* 当屏幕尺寸变化时画面全部内容随之改变 */
    h1{
        font-size: 2rem;
        top: 30%;
    }

    .btn{
        padding: 1.2rem;
        width: 12rem;
    }
}